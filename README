If you have already set up everything, just type:

  ant run-initial




                          **===================**
                          **===================**
                          **  Getting started  **
                          **===================**
                          **===================**


Check out the dev manual in docs/dev_manual

Dependencies
============

OpenJdk 1.7
MySQL 5
Linux

Installing OpenJdk
------------------

For CentOS:
sudo yum install java-1.7.0-openjdk

For Ubuntu:
sudo apt-get install openjdk-7-jre

Installing MySQL
----------------

For CentOS:
sudo yum install mysql-server              #install it
sudo /sbin/service mysqld start            #start it
sudo /usr/bin/mysql_secure_installation    #set password
sudo chkconfig mysqld on                   #set to run on startup

For Ubuntu:
sudo apt-get install mysql-server         #install it
sudo netstat -tap | grep mysql            #check if running
sudo service mysql restart                #start if necessary


Now, set up a user, 
  qarmauser

and a password of 
  password1

STEP 1
======
First, use the mysql program to connect to the server as the 
MySQL root user:

shell> mysql --user=root mysql

If you have assigned a password to the root account, you will also
need to supply a --password or -p option, 

STEP 2
======
Second, use the mysql command to add our user:
mysql> CREATE USER 'qarmauser'@'localhost' IDENTIFIED BY 'password1';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'qarmauser'@'localhost'WITH GRANT OPTION;
mysql> CREATE USER 'qarmauser'@'%' IDENTIFIED BY 'password1';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'qarmauser'@'%' WITH GRANT OPTION;



Environment variables
---------------------

There is a script called set_env.sh which will try to get the
proper values for JAVA_HOME, ANT_HOME, and CATALINA_HOME.  Of these,
JAVA_HOME is the tricky one, since the other two are in this directory!

If you already know the values for JAVA_HOME, ANT_HOME, and CATALINA_HOME,
just set them.  They may be as follows:

ANT_HOME=$LOCATION_OF_QARMA_FOLDER/ant/apache-ant-1.9.4
CATALINA_HOME=$LOCATION_OF_QARMA_FOLDER/web_container/apache-tomcat-8.0.14

For Ubuntu:
JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64

For CentOS:
JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.65.x86_64

If you want to use a script to search for your JAVA_HOME, just run:

utils/set_env.sh

Directories and files at the top:
=================================

ant - holds the utility we use for many benefits on our project.  A
  Neat Tool!

build - where the built work goes.  We copy from there to where it belongs.

build.xml - the Ant script that provides all sorts of benefits, for
  example, building the project. Note: it is very important that this
  file remain where it is, at the root of the project.  Otherwise, it
  may end up creating and deleting directories in unexpected places.

db_scripts - holds scripts necessary to built the database schema.

docs - documentation for the project.

lib - library files used by the project

lib_src - source for the library files

src - source files of the project Compiled code will be placed in the build
  directory

utils - some utilities helpful for development.

web_container - contains documents and binaries for the web container,
  Tomcat.

web_container/apache-tomcat-8.0.14/webapps/qarma/ - the directory for
  the web application.  Jsp files live here, and our Ant script will put
  the classes in the WEB-INF directory here.  If you want to work on
  client-side code, it will probably happen here.

Environment variables you need:
===============================

ANT_HOME should point to the Ant project in this folder. You need it
  to run the ant scripts that make development easy.

JAVA_HOME should point to a Java 1.7 OpenJdk directory.  Ant needs it
  to build the source.

CATALINA_HOME should point to the Tomcat directory.  The Tomcat
  scripts need this.
